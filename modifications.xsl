<?xml version="1.0" encoding="iso-8859-1" ?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:output method="xml" />

  <xsl:template match="/">
          <h1>Build Results</h1>
          Success: <xsl:value-of select="/BuildResult/Success" /><br />
          Module: <xsl:value-of select="/BuildResult/Module" /><br />
          BuildTime: 
            <xsl:call-template name="format-date">
              <xsl:with-param name="date" select="/BuildResult/BuildTime" />
            </xsl:call-template><br />
          <hr size="1" />

          <h2>Modifications Since Last Build</h2>
          <xsl:apply-templates select="//Modification" />

          <h2>Build Output</h2>
          <pre class="code">
          <xsl:value-of select="/BuildResult/BuildOutput" />
        </pre>

          <hr size="1" />
          Generated by <a href="http://draconet.sourceforge.net">Draco.NET</a>
  </xsl:template>

  <xsl:template match="Modification">
    <div class="modification">
      <table border="0" cellpadding="3" cellspacing="2" width="100%">
        <col />
        <col width="90%" />
        <tr>
          <th>Date:</th>
          <td>
            <xsl:call-template name="format-date">
              <xsl:with-param name="date" select="Date" />
            </xsl:call-template>
          </td>
        </tr>
        <tr>
          <th>User:</th>
          <td>
            <xsl:value-of select="User" />
          </td>
        </tr>
        <tr>
          <th>Comment:</th>
          <td>
            <xsl:call-template name="string-replace">
              <xsl:with-param name="string" select="Comment" />
              <xsl:with-param name="from" select="'&#10;'" />
              <xsl:with-param name="to"><br/></xsl:with-param>
            </xsl:call-template>
          </td>
        </tr>
      </table>
      <table class="details" border="0" cellpadding="3" cellspacing="2" width="100%">
        <tr>
          <th>File</th>
          <th>Directory</th>
          <th>Rev.</th>
          <th>Op.</th>
        </tr>
        <xsl:apply-templates select="Files/File" />
      </table>
    </div>
  </xsl:template>

  <xsl:template match="File">
    <tr>
      <td>
        <xsl:value-of select="File" />
      </td>
      <td>
        <xsl:value-of select="Directory" />
      </td>
      <td>
        <xsl:value-of select="Revision" />
      </td>
      <td>
        <xsl:value-of select="Type" />
      </td>
    </tr>
  </xsl:template>
  
  <!-- Replace all occurences of the character(s) 'from' by `to' in the string 'string'.-->
  <xsl:template name="string-replace">
    <xsl:param name="string" />
    <xsl:param name="from" />
    <xsl:param name="to" />
    <xsl:choose>
      <xsl:when test="contains($string,$from)">
        <xsl:value-of select="substring-before($string,$from)" />
        <xsl:copy-of select="$to" />
        <xsl:call-template name="string-replace">
          <xsl:with-param name="string" select="substring-after($string,$from)" />
          <xsl:with-param name="from" select="$from" />
          <xsl:with-param name="to" select="$to" />
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$string" />
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
 
  <!-- Parses a date in UTC format, e.g. 2003-03-07T20:34:04.0000000-00:00 -->
  <xsl:template name="format-date">
    <xsl:param name="date" />
    <!-- Day -->
    <xsl:value-of select="number(substring($date, 9, 2))" />
    <xsl:text> </xsl:text>
    <!-- Month -->
    <xsl:variable name="month" select="number(substring($date, 6, 2))"/>
    <xsl:choose>
      <xsl:when test="$month=1">January</xsl:when>
      <xsl:when test="$month=2">February</xsl:when>
      <xsl:when test="$month=3">March</xsl:when>
      <xsl:when test="$month=4">April</xsl:when>
      <xsl:when test="$month=5">May</xsl:when>
      <xsl:when test="$month=6">June</xsl:when>
      <xsl:when test="$month=7">July</xsl:when>
      <xsl:when test="$month=8">August</xsl:when>
      <xsl:when test="$month=9">September</xsl:when>
      <xsl:when test="$month=10">October</xsl:when>
      <xsl:when test="$month=11">November</xsl:when>
      <xsl:when test="$month=12">December</xsl:when>
    </xsl:choose>
    <xsl:text> </xsl:text>
    <!-- Year -->
    <xsl:value-of select="substring($date, 1, 4)" />
    <xsl:text> </xsl:text>
    <!-- Time -->
    <xsl:value-of select="substring($date, 12, 8)" />
  </xsl:template>

</xsl:stylesheet>
